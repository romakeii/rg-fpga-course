Создать проект Vivado
    - в качестве device выбрать любой Virtex-7
В проект добавить:
    - файл исходного кода модуля mult_unsgn.sv
    - файл исходного кода для симуляции multiplier_tb.sv
    - файл констрейнов constr.xdc
Изучить код модуля mult_unsgn, сопоставить его со схемой беззнакового сумматора из презентации
Убедиться, что в данном модуле регистры установлены только на входные операнды и на выходную шину
Изучить код тестбенча
Запустить поведенческую симуляцию (SIMULATION -> Run Simulation), убедиться в работоспособности модуля
Запустить имплементацию (IMPLEMENTATION -> Run Implementation)
Иучить схемы, получаемые симулятором после этапа RTL синтеза (RTL ANALYSIS -> Open Elaborated Design -> Schematic)
и после этапа имплементации (IMPLEMENTATION -> Open Implemented Design -> Schematic)
Получить отчет временного анализа (IMPLEMENTATION -> Open Implemented Design -> Report Timing Summary -> OK)
Проверить наличие тактового сигнала clk (250MHz) в отчете во вкладке "Clock Summary"
Положительным результатом временного анализа стоит считать положительное значение в поле "Worst Negative Slack (WNS)" в отчете во вкладке "Design Timing Summary"
Убедиться в отрицательном результате временного анализа (отрицательном значении WNS), т.е. в неспособности проекта корректно работать на требуемой тактовой частоте
Модернизировать модуль mult_unsgn его конвейеризацией, усовершенствованный модуль реализовать в новом файле и назвать его "mult_unsgn_cnv"
Изменить в тестбенче параметр CONVEYER на значение 1, чтобы перевести его в режим проверки модуля mult_unsgn_cnv
Добавить файл с усовершенствованным модулем в проект, сделать его Top level (т.к. далее придется провести его имплементацию, а имплементация запускается для модуля, выбранного Top level)
Запустить поведенческую симуляцию (SIMULATION -> Run Simulation), убедиться в работоспособности модуля (обратить внимание на увеличение задержки получения результата)
Повторив вышеописанные шаги для модуля mult_unsgn_cnv, убедиться в положительном результате временного анализа

Дополнительно
Разработать знаковый умножитель на основе модуля беззнакова умножителя mult_unsgn.sv и схемы, приведенной в призентации; назвать его "mult_sgn"
Модернизировать тестбенч multiplier_tb.sv для проверки знакового умножения
